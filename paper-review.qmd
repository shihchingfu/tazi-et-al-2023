---
format: revealjs
self-contained: true
---

## Paper Review

<center>![](figures/title-authors.png){width=80%}</center>

<center>
![https://doi.org/10.48550/arXiv.2307.03093](figures/abstract.png){width=40%}
![](figures/affiliations.png){width=40%}

</center>

## Summary

- A brief overview of Gaussian Processes and their pros/cons.
- Ten step framework for setting up a "robust and well-specified" model.
- Case study of interpolating glacial elevation data collected by satellites over Greenland.
- A engineering technical manual rather than a mathematical treatise.

## Some GP equations

$\{{\mathbf{x}_i, y_i}\}$ for $i = 1, \ldots, N$, $\mathbf{x}_i \in \mathbb{R}^d$ and $y_i \in \mathbb{R}$.

$$y_i = f(\mathbf{x}_i) + \varepsilon_i, \quad e_i \sim \mathcal{N}(0, \sigma^2_n)$$

$$f(.) \sim\mathcal{GP} \left( \mu(\mathbf{x};\mathbf\theta_\mu), k(\mathbf{x}, \mathbf{x'}; \mathbf{\theta}_k) \right)$$

# Strengths \& Limitations of GPs

## Strengths

- Well-calibrated uncertainty estimates
- Handles data that is not IID
- More interpretable than ML
- Data-efficient when retraining (?)
  - More to do with Bayesian workflow than GPs.
- Unlikely to fail (?)
  - reliable as a subpart of a broader ML system.
  
## Limitations

- Training on large datasets ($N \gtrsim 10^4$) is prohibitive 
  - Covariance Matrix inversion is $\mathcal{O}(N^3)$


## Framework

![](figures/figure01.png)

## Takeaways for Me

## Caveats

- Names limitations but doesn't provide much guidance about what to do
- Says not suited to Non-Gaussian distributions ?!
- Need more details on "scaling structures"
- Case Study is doesn't demonstrate the Framework fully
- A bit light on guidance and citations for kernel design
- Really good bibliography of GP literature
- Python code is provided
- No real measure of robust or well-specified model.
- Marginal Gaussian Model with additive Gaussian noise, Gaussian likelihood
